{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "extends": [
        "eslint:recommended",
        "plugin:@cspell/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": ["unicorn", "@shopify"],
      "rules": {
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          // CodeGuide 1.2.2: Именование классов в "PascalCase"
          {
            "selector": ["class"],
            "format": ["PascalCase"]
          },
          // CodeGuide 1.2.4: Именование public/protected-свойств классов в "camelCase"
          {
            "selector": ["classProperty"],
            "modifiers": ["public"],
            "format": ["camelCase"]
          },
          {
            "selector": ["classProperty"],
            "modifiers": ["protected"],
            "format": ["camelCase"]
          },
          // CodeGuide 1.2.5: Приватные свойства должны начинаться с символа подчёркивания
          {
            "selector": ["property", "parameterProperty", "accessor"],
            "modifiers": ["private"],
            "prefix": ["_"],
            "format": ["camelCase"]
          },
          // CodeGuide 1.2.6: Именование методов классов в "camelCase"
          {
            "selector": ["classMethod"],
            "format": ["camelCase"]
          },
          // CodeGuide 1.2.7 (1/2): Именование параметров методов класса и аргументов функций в "camelCase"
          {
            "selector": ["parameter"],
            "format": ["camelCase"]
          },
          // Unspecified: Именование переменных в "camelCase"
          {
            "selector": ["variable"],
            "format": ["camelCase"]
          },
          // Unspecified: Именование констант в "camelCase"
          {
            "selector": ["variable"],
            "modifiers": ["const"],
            "format": ["camelCase"]
          }
        ],
        // CodeGuide 1.2.3: Поля класса должны иметь модификатор доступа
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "constructors": "no-public"
            }
          }
        ],
        // CodeGuide 1.2.7 (2/2): Обязательная типизация аргументов функций/методов
        "@typescript-eslint/typedef": [
          "error",
          {
            "parameter": true
          }
        ],
        // CodeGuide 1.2.8: Не использовать сокращения в именовании сущностей и файлов
        "unicorn/prevent-abbreviations": "error",
        // CodeGuide 4.5: Обязательная типизация возвращаемого значения функций/методов
        "@typescript-eslint/explicit-function-return-type": "error",
        // Unspecified: Проверка орфографии
        "@cspell/spellchecker": [
          "warn",
          {
            // Авто-исправление ошибок если подобран только один вариант исправления
            "autoFix": false,
            // Количество вариантов исправления
            "numSuggestions": 1,
            // Генерировать варианты для исправления
            "generateSuggestions": false,
            // Не проверять имена импортов (import, require)
            "ignoreImports": true,
            // Не проверять импортированные переменные, структуры и типы
            "ignoreImportProperties": true,
            // Проверять идентификаторы (имена переменных, функций, классов)
            "checkIdentifiers": true,
            // Проверять строки
            "checkStrings": true,
            // Проверять шаблонные строки
            "checkStringTemplates": true,
            // Проверять JSX
            "checkJSXText": true,
            // Проверять комментарии
            "checkComments": true,
            // Путь к пользовательскому словарю (лучше настраивать словари в .cspell.json)
            "customWordListFile": "",
            // Вывод журнала отладки
            "debugMode": false
          }
        ],
        // CodeGuide 2.3: Именование перечислений в единственном числе
        "@shopify/typescript/prefer-singular-enums": "error"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
